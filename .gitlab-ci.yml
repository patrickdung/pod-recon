---
# Use Fedora image for buildah/podman
image: registry.fedoraproject.org/fedora:35
#stages:
  #- build-containers
  #- push-containers
#rules:
#  - when: 'manual'
#    allow_failure: true
#    exists:
#      - Dockerfile

variables:
  # if use Docker
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-overlayfs-driver
  # DOCKER_DRIVER: overlay2
  # But Buildah can't use 'overlay' driver when running inside docker
  #STORAGE_DRIVER: 'vfs'
  STORAGE_DRIVER: 'overlay2'
  BUILDAH_FORMAT: 'docker'
  BUILDAH_ISOLATION: 'chroot'
  BASE_IMAGE: 'quay.io/almalinux/8-minimal:8.5'

before_script:
  - modprobe overlay
  - dnf install -y --nodocs --setopt=install_weak_deps=False buildah podman skopeo runc qemu-user-binfmt
  - podman run --rm --privileged docker.io/multiarch/qemu-user-static --reset -p yes
  - buildah login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
  # Newer versions of podman/buildah configured overlayfs mount options when
  # using the vfs driver, and this causes errors
  - sed -i '/^mountopt =.*/d' /etc/containers/storage.conf

build-container:
  #stage: build-containers
  script:
    # - buildah login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    # Newer versions of podman/buildah configured overlayfs mount options when
    # using the vfs driver, and this causes errors.
    - |
      # if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
      #  tag=""
      #  echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      #else
      #  tag=":$CI_COMMIT_REF_SLUG"
      #  echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      #fi
        tag="${CI_COMMIT_REF_SLUG}"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"

    - |
        buildah build-using-dockerfile --override-arch arm64 --build-arg BASE_IMAGE="${BASE_IMAGE}" -t ${CI_REGISTRY_IMAGE}:${tag}-arm64
    - |
        buildah build-using-dockerfile --override-arch amd64 --build-arg BASE_IMAGE="${BASE_IMAGE}" -t ${CI_REGISTRY_IMAGE}:${tag}-amd64
    - buildah manifest create ${CI_REGISTRY_IMAGE}:${tag}
    - buildah manifest ${CI_REGISTRY_IMAGE}:${tag} ${CI_REGISTRY_IMAGE}:${tag}-arm64
    - buildah manifest ${CI_REGISTRY_IMAGE}:${tag} ${CI_REGISTRY_IMAGE}:${tag}-amd64
    - buildah push ${CI_REGISTRY_IMAGE}:${tag}

#  rules:
#    - when: 'manual'
#      allow_failure: true
#      exists:
#        - Dockerfile

  after_script:
    # Don't try to use systemd/journald
    - |
      cat >> /etc/containers/libpod.conf << END
      cgroup_manager = "cgroupfs"
      events_logger = "file"
      END
    - buildah inspect ${CI_REGISTRY_IMAGE}:${tag}
